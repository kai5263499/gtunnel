// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.5
// source: client.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BytesMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelId     string `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Content      []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *BytesMessage) Reset() {
	*x = BytesMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesMessage) ProtoMessage() {}

func (x *BytesMessage) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesMessage.ProtoReflect.Descriptor instead.
func (*BytesMessage) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *BytesMessage) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *BytesMessage) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *BytesMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type GetConfigurationMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *GetConfigurationMessageRequest) Reset() {
	*x = GetConfigurationMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationMessageRequest) ProtoMessage() {}

func (x *GetConfigurationMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationMessageRequest.ProtoReflect.Descriptor instead.
func (*GetConfigurationMessageRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigurationMessageRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type GetConfigurationMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigurationMessageResponse) Reset() {
	*x = GetConfigurationMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigurationMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigurationMessageResponse) ProtoMessage() {}

func (x *GetConfigurationMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigurationMessageResponse.ProtoReflect.Descriptor instead.
func (*GetConfigurationMessageResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

type EndpointControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation       int32  `protobuf:"varint,1,opt,name=operation,proto3" json:"operation,omitempty"`
	TunnelId        string `protobuf:"bytes,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ErrorStatus     int32  `protobuf:"varint,3,opt,name=error_status,json=errorStatus,proto3" json:"error_status,omitempty"`
	ListenIp        uint32 `protobuf:"varint,4,opt,name=listen_ip,json=listenIp,proto3" json:"listen_ip,omitempty"`
	ListenPort      uint32 `protobuf:"varint,5,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	DestinationIp   uint32 `protobuf:"varint,6,opt,name=destination_ip,json=destinationIp,proto3" json:"destination_ip,omitempty"`
	DestinationPort uint32 `protobuf:"varint,7,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
}

func (x *EndpointControlMessage) Reset() {
	*x = EndpointControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointControlMessage) ProtoMessage() {}

func (x *EndpointControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointControlMessage.ProtoReflect.Descriptor instead.
func (*EndpointControlMessage) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *EndpointControlMessage) GetOperation() int32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *EndpointControlMessage) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *EndpointControlMessage) GetErrorStatus() int32 {
	if x != nil {
		return x.ErrorStatus
	}
	return 0
}

func (x *EndpointControlMessage) GetListenIp() uint32 {
	if x != nil {
		return x.ListenIp
	}
	return 0
}

func (x *EndpointControlMessage) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *EndpointControlMessage) GetDestinationIp() uint32 {
	if x != nil {
		return x.DestinationIp
	}
	return 0
}

func (x *EndpointControlMessage) GetDestinationPort() uint32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

type TunnelControlMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation    int32  `protobuf:"varint,1,opt,name=operation,proto3" json:"operation,omitempty"`
	ErrorStatus  int32  `protobuf:"varint,2,opt,name=error_status,json=errorStatus,proto3" json:"error_status,omitempty"`
	TunnelId     string `protobuf:"bytes,3,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ConnectionId string `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *TunnelControlMessage) Reset() {
	*x = TunnelControlMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelControlMessage) ProtoMessage() {}

func (x *TunnelControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelControlMessage.ProtoReflect.Descriptor instead.
func (*TunnelControlMessage) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *TunnelControlMessage) GetOperation() int32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *TunnelControlMessage) GetErrorStatus() int32 {
	if x != nil {
		return x.ErrorStatus
	}
	return 0
}

func (x *TunnelControlMessage) GetTunnelId() string {
	if x != nil {
		return x.TunnelId
	}
	return ""
}

func (x *TunnelControlMessage) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x0c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x16, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x70, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x99, 0x01, 0x0a,
	0x14, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0x8b, 0x03, 0x0a, 0x0d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5d, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x6c, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x16, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x18, 0x0a, 0x07, 0x67, 0x74, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x42, 0x07, 0x47, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x01, 0x5a, 0x02, 0x2e, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_client_proto_goTypes = []interface{}{
	(*BytesMessage)(nil),                    // 0: client.BytesMessage
	(*GetConfigurationMessageRequest)(nil),  // 1: client.GetConfigurationMessageRequest
	(*GetConfigurationMessageResponse)(nil), // 2: client.GetConfigurationMessageResponse
	(*EndpointControlMessage)(nil),          // 3: client.EndpointControlMessage
	(*TunnelControlMessage)(nil),            // 4: client.TunnelControlMessage
}
var file_client_proto_depIdxs = []int32{
	3, // 0: client.ClientService.CreateEndpointControlStream:input_type -> client.EndpointControlMessage
	4, // 1: client.ClientService.CreateTunnelControlStream:input_type -> client.TunnelControlMessage
	1, // 2: client.ClientService.GetConfigurationMessage:input_type -> client.GetConfigurationMessageRequest
	0, // 3: client.ClientService.CreateConnectionStream:input_type -> client.BytesMessage
	3, // 4: client.ClientService.CreateEndpointControlStream:output_type -> client.EndpointControlMessage
	4, // 5: client.ClientService.CreateTunnelControlStream:output_type -> client.TunnelControlMessage
	2, // 6: client.ClientService.GetConfigurationMessage:output_type -> client.GetConfigurationMessageResponse
	0, // 7: client.ClientService.CreateConnectionStream:output_type -> client.BytesMessage
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigurationMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelControlMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClientServiceClient is the client API for ClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientServiceClient interface {
	// Gets a stream of control messages from the server
	CreateEndpointControlStream(ctx context.Context, in *EndpointControlMessage, opts ...grpc.CallOption) (ClientService_CreateEndpointControlStreamClient, error)
	// Gets a stream of control messages for creating and deleting tcp connections
	CreateTunnelControlStream(ctx context.Context, opts ...grpc.CallOption) (ClientService_CreateTunnelControlStreamClient, error)
	// Gets a configuration message based on the bearer token
	GetConfigurationMessage(ctx context.Context, in *GetConfigurationMessageRequest, opts ...grpc.CallOption) (*GetConfigurationMessageResponse, error)
	// Bidirectional stream representing a TCP connection
	CreateConnectionStream(ctx context.Context, opts ...grpc.CallOption) (ClientService_CreateConnectionStreamClient, error)
}

type clientServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClientServiceClient(cc grpc.ClientConnInterface) ClientServiceClient {
	return &clientServiceClient{cc}
}

func (c *clientServiceClient) CreateEndpointControlStream(ctx context.Context, in *EndpointControlMessage, opts ...grpc.CallOption) (ClientService_CreateEndpointControlStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientService_serviceDesc.Streams[0], "/client.ClientService/CreateEndpointControlStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientServiceCreateEndpointControlStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ClientService_CreateEndpointControlStreamClient interface {
	Recv() (*EndpointControlMessage, error)
	grpc.ClientStream
}

type clientServiceCreateEndpointControlStreamClient struct {
	grpc.ClientStream
}

func (x *clientServiceCreateEndpointControlStreamClient) Recv() (*EndpointControlMessage, error) {
	m := new(EndpointControlMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *clientServiceClient) CreateTunnelControlStream(ctx context.Context, opts ...grpc.CallOption) (ClientService_CreateTunnelControlStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientService_serviceDesc.Streams[1], "/client.ClientService/CreateTunnelControlStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientServiceCreateTunnelControlStreamClient{stream}
	return x, nil
}

type ClientService_CreateTunnelControlStreamClient interface {
	Send(*TunnelControlMessage) error
	Recv() (*TunnelControlMessage, error)
	grpc.ClientStream
}

type clientServiceCreateTunnelControlStreamClient struct {
	grpc.ClientStream
}

func (x *clientServiceCreateTunnelControlStreamClient) Send(m *TunnelControlMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *clientServiceCreateTunnelControlStreamClient) Recv() (*TunnelControlMessage, error) {
	m := new(TunnelControlMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *clientServiceClient) GetConfigurationMessage(ctx context.Context, in *GetConfigurationMessageRequest, opts ...grpc.CallOption) (*GetConfigurationMessageResponse, error) {
	out := new(GetConfigurationMessageResponse)
	err := c.cc.Invoke(ctx, "/client.ClientService/GetConfigurationMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientServiceClient) CreateConnectionStream(ctx context.Context, opts ...grpc.CallOption) (ClientService_CreateConnectionStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientService_serviceDesc.Streams[2], "/client.ClientService/CreateConnectionStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientServiceCreateConnectionStreamClient{stream}
	return x, nil
}

type ClientService_CreateConnectionStreamClient interface {
	Send(*BytesMessage) error
	Recv() (*BytesMessage, error)
	grpc.ClientStream
}

type clientServiceCreateConnectionStreamClient struct {
	grpc.ClientStream
}

func (x *clientServiceCreateConnectionStreamClient) Send(m *BytesMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *clientServiceCreateConnectionStreamClient) Recv() (*BytesMessage, error) {
	m := new(BytesMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ClientServiceServer is the server API for ClientService service.
type ClientServiceServer interface {
	// Gets a stream of control messages from the server
	CreateEndpointControlStream(*EndpointControlMessage, ClientService_CreateEndpointControlStreamServer) error
	// Gets a stream of control messages for creating and deleting tcp connections
	CreateTunnelControlStream(ClientService_CreateTunnelControlStreamServer) error
	// Gets a configuration message based on the bearer token
	GetConfigurationMessage(context.Context, *GetConfigurationMessageRequest) (*GetConfigurationMessageResponse, error)
	// Bidirectional stream representing a TCP connection
	CreateConnectionStream(ClientService_CreateConnectionStreamServer) error
}

// UnimplementedClientServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClientServiceServer struct {
}

func (*UnimplementedClientServiceServer) CreateEndpointControlStream(*EndpointControlMessage, ClientService_CreateEndpointControlStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateEndpointControlStream not implemented")
}
func (*UnimplementedClientServiceServer) CreateTunnelControlStream(ClientService_CreateTunnelControlStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateTunnelControlStream not implemented")
}
func (*UnimplementedClientServiceServer) GetConfigurationMessage(context.Context, *GetConfigurationMessageRequest) (*GetConfigurationMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigurationMessage not implemented")
}
func (*UnimplementedClientServiceServer) CreateConnectionStream(ClientService_CreateConnectionStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateConnectionStream not implemented")
}

func RegisterClientServiceServer(s *grpc.Server, srv ClientServiceServer) {
	s.RegisterService(&_ClientService_serviceDesc, srv)
}

func _ClientService_CreateEndpointControlStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EndpointControlMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ClientServiceServer).CreateEndpointControlStream(m, &clientServiceCreateEndpointControlStreamServer{stream})
}

type ClientService_CreateEndpointControlStreamServer interface {
	Send(*EndpointControlMessage) error
	grpc.ServerStream
}

type clientServiceCreateEndpointControlStreamServer struct {
	grpc.ServerStream
}

func (x *clientServiceCreateEndpointControlStreamServer) Send(m *EndpointControlMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _ClientService_CreateTunnelControlStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ClientServiceServer).CreateTunnelControlStream(&clientServiceCreateTunnelControlStreamServer{stream})
}

type ClientService_CreateTunnelControlStreamServer interface {
	Send(*TunnelControlMessage) error
	Recv() (*TunnelControlMessage, error)
	grpc.ServerStream
}

type clientServiceCreateTunnelControlStreamServer struct {
	grpc.ServerStream
}

func (x *clientServiceCreateTunnelControlStreamServer) Send(m *TunnelControlMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *clientServiceCreateTunnelControlStreamServer) Recv() (*TunnelControlMessage, error) {
	m := new(TunnelControlMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ClientService_GetConfigurationMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigurationMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientServiceServer).GetConfigurationMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.ClientService/GetConfigurationMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientServiceServer).GetConfigurationMessage(ctx, req.(*GetConfigurationMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClientService_CreateConnectionStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ClientServiceServer).CreateConnectionStream(&clientServiceCreateConnectionStreamServer{stream})
}

type ClientService_CreateConnectionStreamServer interface {
	Send(*BytesMessage) error
	Recv() (*BytesMessage, error)
	grpc.ServerStream
}

type clientServiceCreateConnectionStreamServer struct {
	grpc.ServerStream
}

func (x *clientServiceCreateConnectionStreamServer) Send(m *BytesMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *clientServiceCreateConnectionStreamServer) Recv() (*BytesMessage, error) {
	m := new(BytesMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ClientService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "client.ClientService",
	HandlerType: (*ClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfigurationMessage",
			Handler:    _ClientService_GetConfigurationMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateEndpointControlStream",
			Handler:       _ClientService_CreateEndpointControlStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateTunnelControlStream",
			Handler:       _ClientService_CreateTunnelControlStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "CreateConnectionStream",
			Handler:       _ClientService_CreateConnectionStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "client.proto",
}
